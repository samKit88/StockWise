generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("CONNECTION_STRING")
}

model brand {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  inventory inventory[]
}

model category {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  inventory inventory[]
}

model image {
  id          Int        @id @default(autoincrement())
  imageURL    String
  inventoryId Int?
  userId      Int?       @unique
  inventory   inventory? @relation(fields: [inventoryId], references: [id])
  users       users?     @relation(fields: [userId], references: [id])
}

model inventory {
  id            Int             @id @default(autoincrement())
  userId        Int
  name          String
  barcode       String
  categoryId    Int
  brandId       Int
  buyingPrice   Decimal         @db.Money
  sellingPrice  Decimal         @db.Money
  productUnit   Unit
  quantity      Int
  minStock      Int             @default(10)
  taxType       Tax
  description   String
  productType   Product
  image         image[]
  saleItems     SalesItems[] // One-to-Many relation
  purchaseItems PurchaseItems[]
  brand         brand           @relation(fields: [brandId], references: [id])
  category      category        @relation(fields: [categoryId], references: [id])
  users         users           @relation(fields: [userId], references: [id])
}

model otp {
  id         Int      @id @default(autoincrement())
  userId     Int
  otpCode    Int
  expiryDate DateTime
  users      users    @relation(fields: [userId], references: [id])

  @@unique([userId, otpCode])
}

model users {
  id           Int         @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String      @unique
  hash         String
  hashedRT     String?
  isSuperAdmin Boolean     @default(false)
  isBanned     Boolean     @default(false)
  createdAt    DateTime    @default(now())
  image        image?
  inventory    inventory[]
  otp          otp[]
}

model partner {
  id            Int           @id @default(autoincrement())
  name          String
  email         String        @unique
  customerGroup CustomerGroup
  phoneNumber   Int
  country       String
  city          String
  address       String
  zipCode       Int
  sales         sales[] // One-to-Many relation
  perchase      Purchase[]
  shippedItems  Shipment[]
}

model sales {
  id          Int          @id @default(autoincrement())
  salesNumber String       @unique
  partnerId   Int
  orderdDate  DateTime
  salesItems  SalesItems[] // One-to-Many relation
  shipments   Shipment[]
  partner     partner      @relation(fields: [partnerId], references: [id])
}

model SalesItems {
  id           Int            @id @default(autoincrement())
  saleId       Int
  quantity     Int
  unitPrice    Decimal        @db.Money
  sale         sales          @relation(fields: [saleId], references: [id])
  inventoryId  Int
  inventory    inventory      @relation(fields: [inventoryId], references: [id])
  shippedItems ShippedItems[]
}

model Shipment {
  id             Int            @id @default(autoincrement())
  shipmentNumber String
  partnerId      Int
  salesId        Int
  shipmentDate   DateTime
  shippedItems   ShippedItems[]
  sales          sales          @relation(fields: [salesId], references: [id])
  partner        partner        @relation(fields: [partnerId], references: [id])
}

model ShippedItems {
  id          Int        @id @default(autoincrement())
  shipmentId  Int
  salesItemId Int
  quantity    Int
  shipment    Shipment   @relation(fields: [shipmentId], references: [id])
  salesItem   SalesItems @relation(fields: [salesItemId], references: [id])
}

model Purchase {
  id             Int             @id @default(autoincrement())
  purchaseNumber String          @unique
  partnerId      Int
  orderdDate     DateTime
  purchaseItmes  PurchaseItems[] // One-to-Many relation
  partner        partner         @relation(fields: [partnerId], references: [id]) // Many-to-One relation
}

model PurchaseItems {
  id          Int       @id @default(autoincrement())
  purchaseId  Int
  quantity    Int
  unitPrice   Decimal   @db.Money
  purchase    Purchase  @relation(fields: [purchaseId], references: [id]) // Many-to-One relation
  inventoryId Int
  inventory   inventory @relation(fields: [inventoryId], references: [id]) // Many-to-One relation
}

enum Product {
  Sale
  Use
}

enum Tax {
  taxable
  nonTaxable
}

enum Unit {
  pieces
  kilograms
  liters
  boxes
  meters
}

enum CustomerGroup {
  Standard
  Casual
  Local
  Foreign
}
